{
  "timestamp": "2025-08-24T11:09:26.448Z",
  "environment": {
    "deno": "2.4.5",
    "os": "linux",
    "arch": "x86_64"
  },
  "tests": [
    {
      "name": "Deno Benchmarks",
      "success": true,
      "duration": 5349,
      "output": "üöÄ Basic performance benchmarks completed\nThese benchmarks test core JavaScript/TypeScript operations\nRun with: deno bench tests/performance/basic-benchmark.ts\n{\n  \"version\": 1,\n  \"runtime\": \"Deno/2.4.5 x86_64-unknown-linux-gnu\",\n  \"cpu\": \"Intel(R) Core(TM) Ultra 9 185H\",\n  \"benches\": [\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"serialization\",\n      \"name\": \"JSON - Parse/Stringify\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 409,\n            \"min\": 1112351.0,\n            \"max\": 3782893.0,\n            \"avg\": 1254981.0,\n            \"p75\": 1209356.0,\n            \"p99\": 2726221.0,\n            \"p995\": 2918092.0,\n            \"p999\": 3782893.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"data-processing\",\n      \"name\": \"Array - Processing Large Dataset\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 454,\n            \"min\": 832918.0,\n            \"max\": 3294058.0,\n            \"avg\": 1126610.0,\n            \"p75\": 1025968.0,\n            \"p99\": 2490544.0,\n            \"p995\": 2578148.0,\n            \"p999\": 3294058.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"string-processing\",\n      \"name\": \"String - Format Conversion\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 1189,\n            \"min\": 352437.0,\n            \"max\": 1435684.0,\n            \"avg\": 424371.0,\n            \"p75\": 430143.0,\n            \"p99\": 618328.0,\n            \"p995\": 649411.0,\n            \"p999\": 702259.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"math\",\n      \"name\": \"Math - Currency Conversion\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 12214,\n            \"min\": 37453.0,\n            \"max\": 273871.0,\n            \"avg\": 40973.0,\n            \"p75\": 41017.0,\n            \"p99\": 52200.0,\n            \"p995\": 54861.0,\n            \"p999\": 101083.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"object-ops\",\n      \"name\": \"Object - Creation and Cloning\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 477,\n            \"min\": 1016171.0,\n            \"max\": 1488812.0,\n            \"avg\": 1072807.0,\n            \"p75\": 1080192.0,\n            \"p99\": 1237518.0,\n            \"p995\": 1284149.0,\n            \"p999\": 1488812.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"collections\",\n      \"name\": \"Collections - Map/Set Operations\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 4258,\n            \"min\": 107254.0,\n            \"max\": 423298.0,\n            \"avg\": 117726.0,\n            \"p75\": 118622.0,\n            \"p99\": 137197.0,\n            \"p995\": 149476.0,\n            \"p999\": 319528.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"async\",\n      \"name\": \"Async - Promise Processing\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 36991,\n            \"min\": 11123.0,\n            \"max\": 337047.0,\n            \"avg\": 13521.0,\n            \"p75\": 13631.0,\n            \"p99\": 17632.0,\n            \"p995\": 19145.0,\n            \"p999\": 34967.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"error-handling\",\n      \"name\": \"Error - Try/Catch Performance\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 18041,\n            \"min\": 25743.0,\n            \"max\": 527388.0,\n            \"avg\": 27732.0,\n            \"p75\": 27836.0,\n            \"p99\": 33262.0,\n            \"p995\": 35549.0,\n            \"p999\": 41397.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    },\n    {\n      \"origin\": \"file:///home/noah/src/data-pipelines-deno-typescript-course/tests/performance/basic-benchmark.ts\",\n      \"group\": \"regex\",\n      \"name\": \"Regex - Pattern Matching\",\n      \"baseline\": false,\n      \"results\": [\n        {\n          \"ok\": {\n            \"n\": 850,\n            \"min\": 566746.0,\n            \"max\": 1225490.0,\n            \"avg\": 595359.0,\n            \"p75\": 597252.0,\n            \"p99\": 695108.0,\n            \"p995\": 765407.0,\n            \"p999\": 1225490.0,\n            \"highPrecision\": true,\n            \"usedExplicitTimers\": false\n          }\n        }\n      ]\n    }\n  ]\n}\n\nWarning: \"files\" configuration in \"bench\" was removed in Deno 2, use \"include\" and \"exclude\" instead.\nUnsupported compiler options in \"file:///home/noah/src/data-pipelines-deno-typescript-course/deno.json\".\n  The following options were ignored:\n    alwaysStrict, esModuleInterop, forceConsistentCasingInFileNames"
    },
    {
      "name": "Memory Tests",
      "success": true,
      "duration": 30262,
      "output": "üß† Simple Memory Usage Test\n============================\nInitial memory: 6.03 MB\nInitial RSS: 57.14 MB\n\nüìä Test 1: Large Array Processing\n  Iteration 0: Memory = 6.14 MB\n  Iteration 20: Memory = 7.18 MB\n  Iteration 40: Memory = 8.28 MB\n  Iteration 60: Memory = 11.08 MB\n  Iteration 80: Memory = 11.32 MB\n  üóëÔ∏è  Forced garbage collection\n\nüìä Test 2: Object Creation and Cloning\n  Created 0 objects: Memory = 10.61 MB\n  Created 200 objects: Memory = 18.34 MB\n  Created 400 objects: Memory = 27.94 MB\n  Created 600 objects: Memory = 24.43 MB\n  Created 800 objects: Memory = 29.29 MB\n\nüìä Test 3: String Processing\n  String operations 0: Memory = 41.95 MB\n  String operations 2000: Memory = 43.04 MB\n  String operations 4000: Memory = 44.12 MB\n  String operations 6000: Memory = 45.21 MB\n  String operations 8000: Memory = 46.35 MB\n\nüìä Test 4: Memory Cleanup\n  üóëÔ∏è  Forced garbage collection after cleanup\n  Final memory: 6.26 MB\n  Final RSS: 126.23 MB\n\nüìä Memory Analysis:\n  Memory growth: 236.50 KB (3.83%)\n  RSS growth: 69.09 MB\n  ‚úÖ Memory growth within acceptable limits.\n\nüî• Memory Stress Test (30 seconds)\n==================================\n  0s: Memory = 6.83 MB (1 iterations)\n  0s: Memory = 7.36 MB (2 iterations)\n  0s: Memory = 7.89 MB (3 iterations)\n  0s: Memory = 8.42 MB (4 iterations)\n  5s: Memory = 15.38 MB (433 iterations)\n  5s: Memory = 15.77 MB (434 iterations)\n  5s: Memory = 16.15 MB (435 iterations)\n  5s: Memory = 16.53 MB (436 iterations)\n  10s: Memory = 22.19 MB (865 iterations)\n  10s: Memory = 22.57 MB (866 iterations)\n  10s: Memory = 22.95 MB (867 iterations)\n  10s: Memory = 23.32 MB (868 iterations)\n  15s: Memory = 28.98 MB (1297 iterations)\n  15s: Memory = 29.36 MB (1298 iterations)\n  15s: Memory = 29.74 MB (1299 iterations)\n  15s: Memory = 30.12 MB (1300 iterations)\n  20s: Memory = 9.55 MB (1728 iterations)\n  20s: Memory = 9.93 MB (1729 iterations)\n  20s: Memory = 10.31 MB (1730 iterations)\n  20s: Memory = 10.68 MB (1731 iterations)\n  20s: Memory = 11.06 MB (1732 iterations)\n  25s: Memory = 16.35 MB (2160 iterations)\n  25s: Memory = 16.73 MB (2161 iterations)\n  25s: Memory = 17.10 MB (2162 iterations)\n  25s: Memory = 17.48 MB (2163 iterations)\n\n  üìä Stress Test Results:\n  Total iterations: 2592\n  Memory growth: 19.81 KB\n  Growth rate: 676.27 B/second\n  ‚úÖ Memory growth rate within limits.\n\n‚úÖ Memory tests completed successfully\n\nüí° Tips:\n  - Run with --v8-flags=--expose-gc for more accurate results\n  - Monitor RSS memory in production environments\n  - Use external profiling tools for detailed analysis\n\nUnsupported compiler options in \"file:///home/noah/src/data-pipelines-deno-typescript-course/deno.json\".\n  The following options were ignored:\n    alwaysStrict, esModuleInterop, forceConsistentCasingInFileNames"
    }
  ],
  "summary": {
    "total": 2,
    "passed": 2,
    "failed": 0,
    "totalDuration": 35611
  }
}